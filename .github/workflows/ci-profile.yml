name: CI
on:
  workflow_call:
    inputs:
      path-prefix:
        type: string
        required: true
      version:
        type: string
        default: '1.0'
      production-refs:
        type: string
        default: '[]'
      linkcheck:
        type: boolean
        default: true
      pytest-options:
        type: string
    secrets:
      private-key:
        required: true
      elasticsearch-password:
        required: true
jobs:
  build:
    if: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: '**/requirements*.txt'
      - run: pip install -r requirements.txt
      - if: ${{ github.repository == 'open-contracting/standard_profile_template' }}
        run: make update extract
      - run: make
      - if: ${{ inputs.linkcheck }}
        run: |
          make linkcheck
          find . \( -name output.json -o -name output.txt \) -exec rm -r "{}" \;
      - run: pytest -W error ${{ inputs.pytest-options }}
      # Deploy the built documentation to the staging directory.
      - if: ${{ github.event_name == 'push' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.private-key }}
          known_hosts: standard.open-contracting.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGveFGTJ9yyObNGDUCUyzyFkm6Kzh3YqIt1qB7B/KU6E
      - if: ${{ github.event_name == 'push' }}
        uses: bcomnes/netrc-creds@v3
        with:
          machine: standard.open-contracting.org
          login: manage
          password: ${{ secrets.elasticsearch-password }}
      - if: ${{ github.event_name == 'push' && success() && github.repository != 'open-contracting/standard_profile_template' }}
        env:
          PATH_PREFIX: ${{ inputs.path-prefix }}
          PRODUCTION: ${{ startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/latest' || contains(fromJSON(inputs.production-refs), github.ref) }}
          RELEASE: ${{ startsWith(github.ref, 'refs/tags') }}
          VERSION: '${{ inputs.version }}'
        shell: bash
        run: curl -sS https://raw.githubusercontent.com/open-contracting/deploy/main/deploy-docs.sh | bash -
